import javax.swing.*;// Swing is an Platform Independent API for providing a graphical user interface (GUI) for Java programs.
import java.awt.*; // Java AWT (Abstract Window Toolkit) is an API (Platform Dependent) to develop GUI or window-based applications in java.
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener; //ActionListener in Java is an interface that is responsible for handling all action events such as when the user clicks on a component.It has only one method: actionPerformed().
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class Login_user extends JFrame implements ActionListener {  // JFrame works like the main window where components like labels, buttons, textfields are added to create a GUI.
    private JPanel panel;         // The main task of JPanel is to organize components, various layouts can be set in JPanel which provide better organisation of components
    private JTextField textField;//The object of a JTextField class is a text component that allows the editing of a single line text.
    private JPasswordField passwordField;//The object of a JPasswordField class is a text component specialized for password entry
    private JButton b1,b2,b3;//The JButton class is used to create a labeled button


    public Login_user() { // All coding for frame is done in constructor

            super("Login/Sign UP");
            setLayout(null);// We are not using predefined layouts in swing package . we will place elements on the frame manually
            setBackground(new Color(169, 169, 169)); //setBackground function in JFrame class // Color class in Swing Package
            setBounds(600, 300, 600, 400);//setBounds function in JFrame Class (used when predefined frame is not used)

            panel = new JPanel();
            panel.setBackground(new Color(250, 250, 210));
            setContentPane(panel);
            panel.setLayout(null);

            JLabel l1 = new JLabel("Username : ");
            l1.setBounds(124, 89, 95, 24);// length from x axis , length from y axis , width of username , height of username
            panel.add(l1);

            JLabel l2 = new JLabel("Password : ");
            l2.setBounds(124, 124, 95, 24);
            panel.add(l2);

            textField = new JTextField();
            textField.setBounds(210, 93, 157, 20);
            panel.add(textField);

            passwordField = new JPasswordField();
            passwordField.setBounds(210, 128, 157, 20);
            panel.add(passwordField);

            b1 = new JButton("Login");
            b1.addActionListener(this); // component.addActionListener(instanceOfListenerclass);

            b1.setForeground(new Color(46, 139, 87));//sets color of text written over the background
            b1.setBackground(new Color(250, 250, 210));
            b1.setBounds(149, 181, 113, 39);
            panel.add(b1);

            b2 = new JButton("SignUp");
            b2.addActionListener(this);

            b2.setForeground(new Color(139, 69, 19));
            b2.setBackground(new Color(255, 235, 205));
            b2.setBounds(289, 181, 113, 39);
            panel.add(b2);

            b3 = new JButton("Forgot Password");
            b3.addActionListener(this);

            b3.setForeground(new Color(205, 92, 92));
            b3.setBackground(new Color(253, 245, 230));
            b3.setBounds(199, 231, 179, 39);
            panel.add(b3);

            JLabel l5 = new JLabel("Trouble in Login?");
            l5.setFont(new Font("Tahoma", Font.PLAIN, 15));
            l5.setForeground(new Color(255, 0, 0));
            l5.setBounds(70, 240, 130, 20);
            panel.add(l5);

    }

    public void actionPerformed(ActionEvent ae){ //actionPerformed overridden // ActionEvent class in awt. This high-level event is generated by a component (such as a Button) when the component-specific action occurs (such as being pressed).The object that implements the ActionListener interface gets this ActionEvent when the event occurs
        if(ae.getSource() == b1){
            Boolean status = false;
            try {
                conn con = new conn();
                String sql = "select * from account where username=? and password=?";//Parameterised String (?->parameter)
                PreparedStatement st = con.c.prepareStatement(sql);//The PreparedStatement interface is a sub interface of Statement. It is used to execute parameterized query.

                st.setString(1, textField.getText());
                st.setString(2, passwordField.getText());

                ResultSet rs = st.executeQuery();//A ResultSet object maintains a cursor that points to the current row in the result set. The term "result set" refers to the row and column data contained in a ResultSet object.
                if (rs.next()) { //if login matches
                    this.setVisible(false); // close current frame
                    new Loading().setVisible(true);// open loading frame
                } else
                    JOptionPane.showMessageDialog(null, "Invalid Login...!.");//JOptionPane Class in JFrame Class throws pop up

            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        if(ae.getSource() == b2){
            this.setVisible(false);
            Signup su = new Signup();
            su.setVisible(true);
        }
        if(ae.getSource() == b3){
            this.setVisible(false);
            Forgot forgot = new Forgot();
            forgot.setVisible(true);
        }
    }

    public static void main(String[] args) {
        new Login_user().setVisible(true);
    }
}

